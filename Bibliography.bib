% This file was created with JabRef 2.8.1.
% Encoding: Cp1252


%Quellen Nico

@misc{petersen_untangle_2020,
	title = {Untangle the {Hairball} with {Bundle} {Layout} {\textbar} {Tom} {Sawyer} {Software}},
	url = {https://blog.tomsawyer.com/untangle-the-hairball-with-bundle-layout/},
	abstract = {Using Bundle layout in Tom Sawyer Perspectives 9.1.0, it's possible to untangle the dreaded hairball often found in complex visualizations. Learn more.},
	language = {en-US},
	urldate = {2021-05-14},
	journal = {Tom Sawyer Software Blog},
	author = {Petersen, Kristin},
	month = jul,
	year = {2020},
	file = {Snapshot:/Users/nicolas/Zotero/storage/F6C573YR/untangle-the-hairball-with-bundle-layout.html:text/html},
}

@misc{ravi_khadka_how_nodate,
	title = {How do professionals perceive legacy systems and software modernization? {\textbar} {Proceedings} of the 36th {International} {Conference} on {Software} {Engineering}},
	url = {https://dl.acm.org/doi/10.1145/2568225.2568318},
	urldate = {2021-05-30},
	author = {{Ravi Khadka}},
}

@misc{wright_severe_nodate,
	title = {The severe ramifications of failing to comply with {GDPR}},
	url = {https://www.core.co.uk/blog/blog/ramifications-failing-comply-with-gdpr},
	abstract = {GDPR is just around the corner, but what really happens if you fail to comply or suffer a data breach once the regulation applies? Find out the real repercussions of failing to comply with GDPR in thi},
	language = {en},
	urldate = {2021-05-30},
	author = {Wright, Lucy},
	file = {Snapshot:/Users/nicolas/Zotero/storage/3MBPGXVU/ramifications-failing-comply-with-gdpr.html:text/html},
}

@article{israeli_linux_2010,
	title = {The {Linux} kernel as a case study in software evolution},
	volume = {83},
	issn = {0164-1212},
	url = {https://doi.org/10.1016/j.jss.2009.09.042},
	doi = {10.1016/j.jss.2009.09.042},
	abstract = {We use 810 versions of the Linux kernel, released over a period of 14years, to characterize the system's evolution, using Lehman's laws of software evolution as a basis. We investigate different possible interpretations of these laws, as reflected by different metrics that can be used to quantify them. For example, system growth has traditionally been quantified using lines of code or number of functions, but functional growth of an operating system like Linux can also be quantified using the number of system calls. In addition we use the availability of the source code to track metrics, such as McCabe's cyclomatic complexity, that have not been tracked across so many versions previously. We find that the data supports several of Lehman's laws, mainly those concerned with growth and with the stability of the process. We also make some novel observations, e.g. that the average complexity of functions is decreasing with time, but this is mainly due to the addition of many small functions.},
	number = {3},
	urldate = {2021-05-30},
	journal = {Journal of Systems and Software},
	author = {Israeli, Ayelet and Feitelson, Dror G.},
	month = mar,
	year = {2010},
	keywords = {Lehman's laws, Linux kernel, Software evolution},
	pages = {485--501},
	file = {Eingereichte Version:/Users/nicolas/Zotero/storage/VL3PX5FQ/Israeli und Feitelson - 2010 - The Linux kernel as a case study in software evolu.pdf:application/pdf},
}

@techreport{the_hamburg_commissioner_for_data_protection_and_freedom_of_information_353_2020,
	address = {Hamburg},
	type = {Pressemitteilung},
	title = {35.3 {Million} {Euro} {Fine} for {Data} {Protection} {Violations} in {H}\&{M}'s {Service} {Center}},
	author = {{The Hamburg Commissioner for Data Protection and Freedom of Information}},
	month = oct,
	year = {2020},
	pages = {2},
}

@misc{noauthor_datenschutz-grundverordnung_nodate,
	title = {Datenschutz-{Grundverordnung}: {DSGVO} als übersichtliche {Seite}},
	shorttitle = {Datenschutz-{Grundverordnung}},
	url = {https://dsgvo-gesetz.de/},
	abstract = {Text der DSGVO {\textbar} Das offizielle PDF der EU-Datenschutz-Grundverordnung (deutsch \& englisch), Erwägungsgründe \& Bundesdatenschutzgesetz als Website.},
	language = {de-DE},
	urldate = {2021-05-30},
	journal = {Datenschutz-Grundverordnung (DSGVO)},
	file = {Snapshot:/Users/nicolas/Zotero/storage/M7PHQW2J/dsgvo-gesetz.de.html:text/html},
}

@misc{noauthor_linux_nodate,
	title = {The {Linux} kernel as a case study in software evolution {\textbar} {Journal} of {Systems} and {Software}},
	url = {https://dl.acm.org/doi/10.1016/j.jss.2009.09.042},
	urldate = {2021-05-30},
	file = {The Linux kernel as a case study in software evolution | Journal of Systems and Software:/Users/nicolas/Zotero/storage/TGWT5G2A/j.jss.2009.09.html:text/html},
}

@article{lehman_understanding_1979,
	title = {On understanding laws, evolution, and conservation in the large-program life cycle},
	volume = {1},
	issn = {0164-1212},
	url = {https://www.sciencedirect.com/science/article/pii/0164121279900220},
	doi = {10.1016/0164-1212(79)90022-0},
	abstract = {The paper presents interpretations of some recently discovered laws of evolution and conservation in the largeprogram life cycle. Program development and maintenance processes are managed and implemented by people; thus in the long term they could be expected to be unpredictable, dependant on the judgments, whims, and actions of programming process participants (e.g., managers, programmers, and product users). Yet, observed, measured, and modeled regularities suggest laws that are closer to biological laws or those of modern physics than to those currently formulated in other areas subject to human influence (e.g., economics and sociology). After a brief discussion of the first four laws, to highlight underlying phenomena and natural attributes of the program evolution process, the paper concentrates on a fifth law and shows how, and why, this law represents a conservation phenomenon: the Conservation of Familiarity.},
	language = {en},
	urldate = {2021-05-30},
	journal = {Journal of Systems and Software},
	author = {Lehman, M. M.},
	month = jan,
	year = {1979},
	pages = {213--221},
	file = {ScienceDirect Snapshot:/Users/nicolas/Zotero/storage/YP4Q7WLQ/0164121279900220.html:text/html},
}

@book{seacord_modernizing_2003,
	address = {Boston},
	edition = {1. Edition},
	title = {Modernizing {Legacy} {Systems}: {Software} {Technologies}, {Engineering} {Processes}, and {Business} {Practices}},
	isbn = {978-0-321-11884-4},
	shorttitle = {Modernizing {Legacy} {Systems}},
	abstract = {Most organizations rely on complex enterprise information systems (EISs) to codify their business practices and collect, process, and analyze business data. These EISs are large, heterogeneous, distributed, constantly evolving, dynamic, long-lived, and mission critical. In other words, they are a complicated system of systems. As features are added to an EIS, new technologies and components are selected and integrated. In many ways, these information systems are to an enterprise what a brain is to the higher species--a complex, poorly understood mass upon which the organism relies for its very existence. To optimize business value, these large, complex systems must be modernized--but where does one begin? This book uses an extensive real-world case study (based on the modernization of a thirty year old retail system) to show how modernizing legacy systems can deliver significant business value to any organization.},
	language = {Englisch},
	publisher = {Addison-Wesley Professional},
	author = {Seacord, Robert and Gordon, Peter and Plakosh, Daniel and Lewis, Grace and Fuller, John},
	month = feb,
	year = {2003},
}

@inproceedings{abts_cocots_2000,
	title = {{COCOTS}: {A} {COTS} {Software} {Integration} {Lifecycle} {Cost} {Model} - {Model} {Overview} and {Preliminary} {Data} {Collection} {Findings}},
	shorttitle = {{COCOTS}},
	abstract = {As the use of commercial-of-the-shelf (COTS) components becomes ever more prevalent in the creation of large software systems, the need for the ability to reasonably predict the true lifetime cost of using such software components grows accordingly. In using COTS components, immediate short-term gains in direct development effort \& schedule are possible, but usually as a trade-off for a more complicated long-term postdeployment maintenance environment. In addition, there are risks associated with COTS software separate from those of creating components from scratch. These unique risks can further complicate the development and postdeployment situations. This paper discusses a model being developed as an extension of the COCOMO II [1] cost model. COCOTS attempts to predict the lifecycle costs of using COTS components by capturing the more significant COTS risks in its modeling parameters. The current state of the model is presented, along with some preliminary findings suggested by an a...},
	booktitle = {In {ESCOM}-{SCOPE} {Conference}},
	publisher = {Publ},
	author = {Abts, Chris and Barry, M. S. and Boehm, Barry W. and Elizabeth, Ph D. and Clark, Elizabeth Bailey and D, Ph},
	year = {2000},
	pages = {2000--2000},
	file = {Citeseer - Full Text PDF:/Users/nicolas/Zotero/storage/I3BEICMH/Abts et al. - 2000 - COCOTS A COTS Software Integration Lifecycle Cost.pdf:application/pdf;Citeseer - Snapshot:/Users/nicolas/Zotero/storage/3NKJHFGG/summary.html:text/html},
}

@misc{noauthor_moving_nodate,
	title = {Moving {From} {Your} {Legacy} {System} - {COBOL} {Conversion}, {Cost} and {Consequences}},
	url = {https://logapps.com/white_paper/moving-from-your-legacy-system-cobol-conversion-cost-and-consequences/},
	abstract = {Every year seasoned COBOL developers retire, and their knowledge about the systems they helped create retires with them. Organizations running COBOL need to be proactive about this diminishing institutional knowledge, so when the time comes to migrate away from the ever-fading language they will be prepared.},
	language = {en-US},
	urldate = {2021-06-04},
	journal = {Logapps, LLC},
	file = {Snapshot:/Users/nicolas/Zotero/storage/HSIT53P6/moving-from-your-legacy-system-cobol-conversion-cost-and-consequences.html:text/html},
}

@inproceedings{khadka_does_2015,
	title = {Does software modernization deliver what it aimed for? {A} post modernization analysis of five software modernization case studies},
	shorttitle = {Does software modernization deliver what it aimed for?},
	doi = {10.1109/ICSM.2015.7332499},
	abstract = {Software modernization has been extensively researched, primarily focusing on observing the associated phenomena, and providing technical solutions to facilitate the modernization process. Software modernization is claimed to be successful when the modernization is completed using those technical solutions. Very limited research, if any, is reported with an aim at documenting the post-modernization impacts, i.e., whether any of the pre-modernization business goals are in fact achieved after modernization. In this research, we attempt to address this relative absence of empirical study through five retrospective software modernization case studies. We use an explanatory case study approach to document the pre-modernization business goals, and to decide whether those goals have been achieved. The intended benefits for each of the five cases we considered were all (partially) met, and in most cases fully. Moreover, many cases exhibited a number of unintended benefits, and some reported detrimental effects of modernization.},
	booktitle = {2015 {IEEE} {International} {Conference} on {Software} {Maintenance} and {Evolution} ({ICSME})},
	author = {Khadka, Ravi and Shrestha, Prajan and Klein, Bart and Saeidi, Amir and Hage, Jurriaan and Jansen, Slinger and van Dis, Edwin and Bruntink, Magiel},
	month = sep,
	year = {2015},
	keywords = {Companies, Interviews, Maintenance engineering, Software maintenance, Software systems},
	pages = {477--486},
	file = {Eingereichte Version:/Users/nicolas/Zotero/storage/RUESV24P/Khadka et al. - 2015 - Does software modernization deliver what it aimed .pdf:application/pdf;IEEE Xplore Abstract Record:/Users/nicolas/Zotero/storage/RT75VIBP/7332499.html:text/html},
}

@book{bommer_softwarewartung_2016,
	edition = {1. Edition},
	title = {Softwarewartung: {Grundlagen}, {Management} und {Wartungstechniken}},
	shorttitle = {Softwarewartung},
	abstract = {Software ist aus nahezu allen Bereichen unserer Gesellschaft nicht mehr wegzudenken und stellt nicht selten eine Achillesferse dar. Entsprechend wächst die Wichtigkeit der Pflege softwarebasierter Systeme und damit die Bedeutung der Softwarewartung. Dieses Buch gibt Ihnen eine Übersicht über die Softwarewartung, bietet Hilfestellung bei der Durchführung und zeigt Lösungsansätze zu den spezifischen Problemen auf. Es ist in die drei Themenblöcke Grundlagen, Managementthemen und Techniken der Softwarewartung aufgeteilt. Diese umfassen eine Einführung in die Begriffswelt der Softwarewartung, in die Grundlagen der Wartung sowie die Evolution von Software. Die Einbettung des Wartungsprozesses in den Lebenszyklus einer Software, die Einflüsse auf die unterschiedlichen Organisationsformen und Ansätze zur Kostenbetrachtung werden im Detail beschrieben. Darüber hinaus wird der Umgang mit Wissen und Dokumentation erläutert. Im technischen Teil schließlich wird auf den Nutzen von Metriken, Softwareanalyse und -visualisierung für die Softwarewartung eingegangen. Weitere Themen sind Reengineering, Sanierung und Migration sowie das Testen. Im Anhang befinden sich u.a. ein kurzer Leitfaden der Softwarewartung, ein Glossar und weiterführende Literaturangaben.Diese Ausgabe bezieht sich auf die gedruckte Vorlage aus 2008.},
	language = {Deutsch},
	publisher = {dpunkt.verlag},
	author = {Bommer, Christoph and Spindler, Markus and Barr, Volkert},
	month = apr,
	year = {2016},
}

@misc{noauthor_visitor_nodate,
	title = {Visitor {Design} {Pattern}: {Erklärung} \& {Beispiel}-{Besucher}-{Entwurfsmuster} - {IONOS}},
	url = {https://www.ionos.de/digitalguide/websites/web-entwicklung/was-ist-das-visitor-pattern/},
	urldate = {2021-06-10},
}

@book{fowler_refactoring_2018,
	title = {Refactoring: {Improving} the {Design} of {Existing} {Code}},
	shorttitle = {Refactoring},
	abstract = {"Whenever you read [Refactoring], it’s time to read it again. And if you haven’t read it yet, please do before writing another line of code."                –David Heinemeier Hansson, Creator of Ruby on Rails, Founder \& CTO at Basecamp             Fully Revised and Updated—Includes New Refactoring's and Code Examples     “Any fool can write code that a computer can understand. Good programmers write code that humans can understand.”  –M. Fowler (1999)  For more than twenty years, experienced programmers worldwide have relied on Martin Fowler’s Refactoring to improve the design of existing code and to enhance software maintainability, as well as to make existing code easier to understand.    This eagerly awaited new edition has been fully updated to reflect crucial changes in the programming landscape.  Refactoring, Second Edition,  features an updated catalog of refactoring's and includes JavaScript code examples, as well as new functional examples that demonstrate refactoring without classes.    Like the original, this edition explains what refactoring is; why you should refactor; how to recognize code that needs refactoring; and how to actually do it successfully, no matter what language you use.  Understand the process and general principles of refactoring Quickly apply useful refactorings to make a program easier to comprehend and change Recognize “bad smells” in code that signal opportunities to refactor Explore the refactorings, each with explanations, motivation, mechanics, and simple examples Build solid tests for your refactorings Recognize tradeoffs and obstacles to refactoring   Includes free access to the canonical web edition, with even more refactoring resources. (See inside the book for details about how to access the web edition.)},
	author = {Fowler, Martin},
	month = nov,
	year = {2018},
}

@misc{martin_fowler_codesmell_nodate,
	title = {{CodeSmell}},
	shorttitle = {bliki},
	url = {https://martinfowler.com/bliki/CodeSmell.html},
	abstract = {a bliki entry for CodeSmell},
	urldate = {2021-06-12},
	journal = {martinfowler.com},
	author = {{Martin Fowler}},
	file = {Snapshot:/Users/nicolas/Zotero/storage/UPKWA844/CodeSmell.html:text/html},
}

@misc{noauthor_once_nodate,
	title = {Once {And} {Only} {Once}},
	url = {https://wiki.c2.com/?OnceAndOnlyOnce},
	urldate = {2021-06-12},
	file = {Once And Only Once:/Users/nicolas/Zotero/storage/9UUQ3WBG/wiki.c2.com.html:text/html},
}

@misc{noauthor_visitor_nodate-1,
	title = {Visitor design pattern: explanations and examples - {IONOS}},
	url = {https://www.ionos.com/digitalguide/websites/web-development/visitor-pattern/},
	urldate = {2021-06-12},
	file = {Visitor design pattern\: explanations and examples - IONOS:/Users/nicolas/Zotero/storage/PCNRUNDC/visitor-pattern.html:text/html},
}

@article{daniel_kramer_legacy-software_2020,
	title = {Legacy-{Software} wieder testbar machen:  {Jenseits} der grünen {Wiese}},
	language = {Deutsch},
	number = {05},
	journal = {OBJEKTSpektrum - Software-Modernisierung},
	author = {{Daniel Krämer}},
	month = may,
	year = {2020},
	pages = {63},
}

@misc{sonarqube_code_nodate,
	title = {Code {Quality} and {Code} {Security} {\textbar} {SonarQube}},
	url = {https://www.sonarqube.org/},
	abstract = {Catch bugs and vulnerabilities in your app, with thousands of automated Static Code Analysis rules.},
	language = {en},
	urldate = {2021-07-08},
	author = {{SonarQube}},
	file = {Snapshot:/Users/nicolas/Zotero/storage/UNMDUUQ8/www.sonarqube.org.html:text/html},
}


%Quellen Alex

@article{skyhigh,
  title={Making encryption work in the cloud},
  author={Boldyreva, Alexandra and Grubbs, Paul},
  journal={Network Security},
  volume={2014},
  number={10},
  pages={8--10},
  year={2014},
  publisher={Elsevier}
}

@online{nist,
  author = {National Institute
of Standards and Technology },
  title = {The NIST Definition of Cloud
Computing},
  year = 2011,
  url = {https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-145.pdf},
  urldate = {2021-07-04}
}

@online{CcIBM,
  author = { IBM},
  title = {What is SOA, or service-oriented architecture?},
  year = 2021,
  url = {https://www.ibm.com/cloud/learn/soa},
  urldate = {2021-07-04}
}

@book{falk2012compliance,
  title={IT-Compliance in der Corporate Governance: Anforderungen und Umsetzung},
  author={Falk, Michael},
  year={2012},
  publisher={Springer-Verlag}
}

@article{klotz2008compliance,
  title={IT-Compliance—Begriff, Umfang und relevante Regelwerke},
  author={Klotz, Michael and Dorn, Dietrich-W},
  journal={HMD Praxis der Wirtschaftsinformatik},
  volume={45},
  number={5},
  pages={5--14},
  year={2008},
  publisher={Springer}
}

@article{bibi2012business,
  title={Business application acquisition: On-premise or SaaS-based solutions?},
  author={Bibi, Stamatia and Katsaros, Dimitrios and Bozanis, Panayiotis},
  journal={IEEE software},
  volume={29},
  number={3},
  pages={86--93},
  year={2012},
  publisher={IEEE}
}

@article{fisher2018cloud,
  title={Cloud versus on-premise computing},
  author={Fisher, Cameron and others},
  journal={American Journal of Industrial and Business Management},
  volume={8},
  number={09},
  pages={1991},
  year={2018},
  publisher={Scientific Research Publishing}
}

@online{ibmAsAStructre,
  author = {IBM },
  title = {IaaS vs. PaaS vs. SaaS},
  year = 2018,
  url = {https://www.ibm.com/de-de/cloud/learn/iaas-paas-saas},
  urldate = {2021-07-09}
}

@online{artistEU,
  author = {European Commision},
  title = {Alternative Routes Towards Information Storage and Transport at the Atomic and Molecular Scale},
  year = 2013,
  url = {https://cordis.europa.eu/project/id/243421},
  urldate = {2021-07-18}
}

@inproceedings{10.1145/2818567.2818579,
author = {Jain, Suman and Chana, Inderveer},
title = {Modernization of Legacy Systems: A Generalised Roadmap},
year = {2015},
isbn = {9781450335522},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2818567.2818579},
doi = {10.1145/2818567.2818579},
abstract = {A number of key organizations are sustaining the decades old complex legacy systems despite their types of services and operating environment. Cloud computing provides numerous processes, tools and methods to emphasize upon the pay-as-per-use utility models. The utter need to modernize these older systems leads to modernization processes involving the vision to leverage the cloud computing benefits. The proposed modernization framework includes decision support module followed by the elaboration of available modernization approaches. This legacy problem is one of the main challenges for cloud computing to deal with. When re-architecting and reengineering these legacy systems, parallel computing approaches also need to be assessed for resource optimization in cloud environments.},
booktitle = {Proceedings of the Sixth International Conference on Computer and Communication Technology 2015},
pages = {62–67},
numpages = {6},
keywords = {Reengineering, Service oriented architecture, Cloud computing, Decision making module, Migration, MoDisco, Modernization},
location = {Allahabad, India},
series = {ICCCT '15}
}

@inproceedings{profperLeg,
author = {Khadka, Ravi and Batlajery, Belfrit V. and Saeidi, Amir M. and Jansen, Slinger and Hage, Jurriaan},
title = {How Do Professionals Perceive Legacy Systems and Software Modernization?},
year = {2014},
isbn = {9781450327565},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2568225.2568318},
doi = {10.1145/2568225.2568318},
abstract = { Existing research in legacy system modernization has traditionally focused on technical
challenges, and takes the standpoint that legacy systems are obsolete, yet crucial
for an organization's operation. Nonetheless, it remains unclear whether practitioners
in the industry also share this perception. This paper describes the outcome of an
exploratory study in which 26 industrial practitioners were interviewed on what makes
a software system a legacy system, what the main drivers are that lead to the modernization
of such systems, and what challenges are faced during the modernization process. The
findings of the interviews have been validated by means of a survey with 198 respondents.
The results show that practitioners value their legacy systems highly, the challenges
they face are not just technical, but also include business and organizational aspects.
},
booktitle = {Proceedings of the 36th International Conference on Software Engineering},
pages = {36–47},
numpages = {12},
keywords = {Legacy Modernization, Grounded Theory, Empirical Studies, Legacy Systems},
location = {Hyderabad, India},
series = {ICSE 2014}
}

@article{menychtas2014software,
  title={Software modernization and cloudification using the ARTIST migration methodology and framework},
  author={Menychtas, Andreas and Konstanteli, Kleopatra and Alonso, Juncal and Orue-Echevarria, Leire and Gorronogoitia, Jesus and Kousiouris, George and Santzaridou, Christina and Bruneliere, Hugo and Pellens, Bram and Stuer, Peter and others},
  journal={Scalable Computing: Practice and Experience},
  volume={15},
  number={2},
  pages={131--152},
  year={2014}
}

@inproceedings{lewis2005service,
  title={Service-oriented migration and reuse technique (smart)},
  author={Lewis, Grace and Morris, Edwin and Smith, Dennis and O'Brien, Liam},
  booktitle={13th IEEE International Workshop on Software Technology and Engineering Practice (STEP'05)},
  pages={222--229},
  year={2005},
  organization={IEEE}
}

@inproceedings{ccRoadmap,
author = {Jain, Suman and Chana, Inderveer},
title = {Modernization of Legacy Systems: A Generalised Roadmap},
year = {2015},
isbn = {9781450335522},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2818567.2818579},
doi = {10.1145/2818567.2818579},
abstract = {A number of key organizations are sustaining the decades old complex legacy systems
despite their types of services and operating environment. Cloud computing provides
numerous processes, tools and methods to emphasize upon the pay-as-per-use utility
models. The utter need to modernize these older systems leads to modernization processes
involving the vision to leverage the cloud computing benefits. The proposed modernization
framework includes decision support module followed by the elaboration of available
modernization approaches. This legacy problem is one of the main challenges for cloud
computing to deal with. When re-architecting and reengineering these legacy systems,
parallel computing approaches also need to be assessed for resource optimization in
cloud environments.},
booktitle = {Proceedings of the Sixth International Conference on Computer and Communication Technology 2015},
pages = {62–67},
numpages = {6},
keywords = {Cloud computing, Decision making module, Reengineering, Migration, Service oriented architecture, MoDisco, Modernization},
location = {Allahabad, India},
series = {ICCCT '15}
}

@article{briscoe2000understanding,
  title={Understanding the OSI 7-layer model},
  author={Briscoe, Neil},
  journal={PC Network Advisor},
  volume={120},
  number={2},
  pages={13--15},
  year={2000}
}


@incollection{cots,
  title={Some Off-the-Shelf Systems},
  author={Holtz, Herman},
  booktitle={Computer Work Stations},
  pages={15--24},
  year={1985},
  publisher={Springer}
}


